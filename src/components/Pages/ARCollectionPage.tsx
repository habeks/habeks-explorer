import React, { useState, useRef, useEffect } from 'react';
import { Player, Currency, Location, GameItem, ARCapture } from '../../types';
import { 
  CameraIcon, 
  TargetIcon, 
  CrosshairIcon, 
  BackpackIcon,
  LightningIcon,
  CrystalIcon
} from '../Icons';

interface ARCollectionPageProps {
  player: Player | null;
  currency: Currency;
  setCurrency: (currency: Currency) => void;
  location: Location | null;
  setNotification: (message: string) => void;
}

export const ARCollectionPage: React.FC<ARCollectionPageProps> = ({
  player,
  currency,
  setCurrency,
  location,
  setNotification
}) => {
  const videoRef = useRef<HTMLVideoElement>(null);
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const currentStreamRef = useRef<MediaStream | null>(null);
  const [isCameraActive, setIsCameraActive] = useState(false);
  const [arObjects, setArObjects] = useState<GameItem[]>([]);
  const [activeCapture, setActiveCapture] = useState<ARCapture | null>(null);
  const [deviceMotion, setDeviceMotion] = useState({ x: 0, y: 0, z: 0 });
  const [inventory, setInventory] = useState<GameItem[]>([]);
  const [isMoving, setIsMoving] = useState(false);
  const [movementThreshold] = useState(0.5); // –ü–æ—Ä–æ–≥ –¥–≤–∏–∂–µ–Ω–∏—è
  const [loading, setLoading] = useState(false); // –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–º–µ—Ä—ã
  const [error, setError] = useState<string | null>(null); // –û—à–∏–±–∫–∞ –∫–∞–º–µ—Ä—ã

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–º–µ—Ä—ã
  useEffect(() => {
    return () => {
      stopCamera();
    };
  }, []);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  useEffect(() => {
    const handleDeviceMotion = (event: DeviceMotionEvent) => {
      const { accelerationIncludingGravity } = event;
      if (accelerationIncludingGravity) {
        const { x = 0, y = 0, z = 0 } = accelerationIncludingGravity;
        setDeviceMotion({ x, y, z });
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–µ
        const movement = Math.sqrt(x * x + y * y + z * z);
        const isCurrentlyMoving = movement > movementThreshold;
        
        if (isCurrentlyMoving !== isMoving) {
          setIsMoving(isCurrentlyMoving);
          
          // –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏
          if (isCurrentlyMoving && activeCapture) {
            setActiveCapture(null);
            setNotification('–°–±–æ—Ä –ø—Ä–µ—Ä–≤–∞–Ω - —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–≤–∏–∂–µ—Ç—Å—è');
          }
        }
      }
    };

    if (window.DeviceMotionEvent) {
      window.addEventListener('devicemotion', handleDeviceMotion);
    }

    return () => {
      if (window.DeviceMotionEvent) {
        window.removeEventListener('devicemotion', handleDeviceMotion);
      }
    };
  }, [isMoving, activeCapture, movementThreshold]);

  // –ú–û–ë–ò–õ–¨–ù–û-–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –∑–∞–ø—É—Å–∫ AR –∫–∞–º–µ—Ä—ã
  const startCamera = async () => {
    setLoading(true);
    setError(null);
    
    console.log('üì± –ú–æ–±–∏–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ AR –∫–∞–º–µ—Ä—ã...');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||
                    ('ontouchstart' in window) ||
                    (navigator.maxTouchPoints > 0);
                    
    console.log(`üì± –ú–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${isMobile}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è production) —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏
    if (window.location.protocol !== 'https:' && 
        window.location.hostname !== 'localhost' && 
        window.location.hostname !== '127.0.0.1' &&
        !window.location.hostname.includes('.github.io') &&
        !window.location.hostname.includes('local')) {
      const errorMsg = 'üîí AR –∫–∞–º–µ—Ä–∞ —Ç—Ä–µ–±—É–µ—Ç HTTPS. –û—Ç–∫—Ä–æ–π—Ç–µ —Å–∞–π—Ç —á–µ—Ä–µ–∑ https://';
      setError(errorMsg);
      setNotification(errorMsg);
      setLoading(false);
      return;
    }
    
    try {
      setNotification('üöÄ –ú–æ–±–∏–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AR-–∫–∞–º–µ—Ä—ã...');
      
      // –ú–æ–±–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ API
      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
        throw new Error('–ö–∞–º–µ—Ä–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ');
      }
      
      const video = videoRef.current;
      if (!video) {
        throw new Error('–û—à–∏–±–∫–∞: –≤–∏–¥–µ–æ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø–æ—Ç–æ–∫
      if (currentStreamRef.current) {
        currentStreamRef.current.getTracks().forEach(track => track.stop());
        currentStreamRef.current = null;
      }
      
      // –ú–û–ë–ò–õ–¨–ù–û-–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –∫–æ–Ω—Å—Ç—Ä–µ–π–Ω—Ç—ã –∫–∞–º–µ—Ä—ã
      const baseConstraints = {
        video: {
          facingMode: isMobile ? 'environment' : 'environment', // –£–±—Ä–∞–ª–∏ exact –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
          width: isMobile ? { ideal: 1280, min: 640, max: 1920 } : { ideal: 640 },
          height: isMobile ? { ideal: 720, min: 480, max: 1080 } : { ideal: 480 },
          frameRate: isMobile ? { ideal: 30, min: 15, max: 30 } : { ideal: 24 },
          aspectRatio: { ideal: 16/9 } // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω
        },
        audio: false
      };
      
      console.log('üì∑ –ú–æ–±–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–º–µ—Ä–µ...');
      
      let stream;
      try {
        // –ü—Ä–æ–±—É–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        stream = await navigator.mediaDevices.getUserMedia(baseConstraints);
      } catch (highQualityError) {
        console.warn('‚ö†Ô∏è –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è, –ø—Ä–æ–±—É–µ–º –±–∞–∑–æ–≤—ã–µ:', highQualityError);
        
        // Fallback –∫ –±–∞–∑–æ–≤—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
        const fallbackConstraints = {
          video: {
            facingMode: 'environment',
            width: { ideal: 640 },
            height: { ideal: 480 }
          },
          audio: false
        };
        
        try {
          stream = await navigator.mediaDevices.getUserMedia(fallbackConstraints);
        } catch (fallbackError) {
          console.warn('‚ö†Ô∏è –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è, –ø—Ä–æ–±—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ:', fallbackError);
          
          // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });
        }
      }
      
      if (!stream) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫');
      }
      
      currentStreamRef.current = stream;
      console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω—ã–π –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫ –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      
      // –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–¥–µ–æ
      video.srcObject = stream;
      video.muted = true;
      video.playsInline = true;
      video.autoplay = true;
      video.controls = false;
      video.setAttribute('playsinline', 'true'); // –û—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è iOS
      video.setAttribute('webkit-playsinline', 'true'); // –°—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ iOS
      
      // –ú–æ–±–∏–ª—å–Ω–æ-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫
      const startVideo = () => {
        const playPromise = video.play();
        
        if (playPromise !== undefined) {
          playPromise.then(() => {
            console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ –∑–∞–ø—É—â–µ–Ω–æ');
            setIsCameraActive(true);
            generateARObjects();
            setNotification('‚úÖ –ú–æ–±–∏–ª—å–Ω–∞—è AR –∫–∞–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã');
          }).catch(playError => {
            console.warn('‚ö†Ô∏è –ú–æ–±–∏–ª—å–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:', playError);
            setNotification('üíÜ –ö–æ—Å–Ω–∏—Ç–µ—Å—å —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ AR –∫–∞–º–µ—Ä—ã');
            setIsCameraActive(true);
            generateARObjects();
          });
        }
      };
      
      // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
      video.onloadedmetadata = startVideo;
      
      // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ –µ—Å–ª–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
      if (video.readyState >= 2) {
        startVideo();
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ AR –∫–∞–º–µ—Ä—ã:', error);
      
      let errorMsg = '–û—à–∏–±–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –∫–∞–º–µ—Ä—ã';
      
      if (error instanceof Error) {
        const msg = error.message;
        if (msg.includes('Permission') || msg.includes('NotAllowed') || msg.includes('NotAllowedError')) {
          errorMsg = 'üìµ –ú–æ–±–∏–ª—å–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä: –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö';
        } else if (msg.includes('NotFound') || msg.includes('NotFoundError')) {
          errorMsg = 'üì∑ –ö–∞–º–µ—Ä–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ';
        } else if (msg.includes('NotReadable') || msg.includes('NotReadableError')) {
          errorMsg = 'üîç –ö–∞–º–µ—Ä–∞ –∑–∞–Ω—è—Ç–∞ –¥—Ä—É–≥–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º. –ó–∞–∫—Ä–æ–π—Ç–µ –¥—Ä—É–≥–∏–µ –∫–∞–º–µ—Ä–∞-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è';
        } else if (msg.includes('Overconstrained') || msg.includes('OverconstrainedError')) {
          errorMsg = '‚öôÔ∏è –ú–æ–±–∏–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏';
        } else {
          errorMsg = `‚ö†Ô∏è –ú–æ–±–∏–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: ${msg}`;
        }
      }
      
      setError(errorMsg);
      setNotification(errorMsg);
    } finally {
      setLoading(false);
    }
  };

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞–º–µ—Ä—ã
  const stopCamera = () => {
    try {
      // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Ç—Ä–µ–∫–æ–≤ –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫–∞
      if (currentStreamRef.current) {
        currentStreamRef.current.getTracks().forEach(track => track.stop());
        currentStreamRef.current = null;
      }
      
      if (videoRef.current) {
        videoRef.current.srcObject = null;
      }
      
      setIsCameraActive(false);
      setArObjects([]);
      setActiveCapture(null);
      setLoading(false);
      setError(null);
      console.log('AR –∫–∞–º–µ—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–∞–º–µ—Ä—ã:', err);
    }
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è AR –æ–±—ä–µ–∫—Ç–æ–≤
  const generateARObjects = () => {
    if (!location) return;

    const objects: GameItem[] = [];
    const objectCount = Math.floor(Math.random() * 3) + 1; // 1-3 –æ–±—ä–µ–∫—Ç–∞
    
    const rarities: GameItem['rarity'][] = ['common', 'uncommon', 'rare', 'epic', 'legendary'];
    const types: GameItem['type'][] = ['weapon', 'armor', 'artifact', 'resource', 'consumable'];
    
    for (let i = 0; i < objectCount; i++) {
      const rarity = rarities[Math.floor(Math.random() * rarities.length)];
      const type = types[Math.floor(Math.random() * types.length)];
      
      // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
      const x = Math.random() * 80 + 10; // 10-90% –æ—Ç —à–∏—Ä–∏–Ω—ã
      const y = Math.random() * 60 + 20; // 20-80% –æ—Ç –≤—ã—Å–æ—Ç—ã
      
      const captureTime = 
        rarity === 'legendary' ? 9 :
        rarity === 'epic' ? 7 :
        rarity === 'rare' ? 5 :
        rarity === 'uncommon' ? 4 : 3;
      
      objects.push({
        id: `ar_${Date.now()}_${i}`,
        type,
        name: generateItemName(type, rarity),
        rarity,
        description: `AR –æ–±—ä–µ–∫—Ç –≤ —Ä–∞–¥–∏—É—Å–µ 50 –º–µ—Ç—Ä–æ–≤`,
        icon: getItemIcon(type),
        value: calculateItemValue(rarity),
        coordinates: [location.latitude, location.longitude],
        captureTime,
        properties: {
          screenX: x,
          screenY: y,
          distance: Math.random() * 45 + 5 // 5-50 –º–µ—Ç—Ä–æ–≤
        }
      });
    }
    
    setArObjects(objects);
  };

  // –ù–∞—á–∞–ª–æ —Å–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
  const startCapture = (item: GameItem) => {
    if (isMoving) {
      setNotification('–ù–µ –¥–≤–∏–≥–∞–π—Ç–µ—Å—å –≤–æ –≤—Ä–µ–º—è —Å–±–æ—Ä–∞!');
      return;
    }

    if (activeCapture) {
      setNotification('–°–±–æ—Ä —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ');
      return;
    }

    setActiveCapture({
      itemId: item.id,
      startTime: Date.now(),
      progress: 0,
      isCapturing: true,
      requiredTime: item.captureTime! * 1000 // –º—Å
    });

    setNotification(`–ù–∞—á–∞–ª—Å—è —Å–±–æ—Ä ${item.name}. –ù–µ –¥–≤–∏–≥–∞–π—Ç–µ—Å—å!`);
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å–±–æ—Ä–∞
  useEffect(() => {
    if (!activeCapture || !activeCapture.isCapturing) return;

    const updateProgress = () => {
      const elapsed = Date.now() - activeCapture.startTime;
      const progress = Math.min((elapsed / activeCapture.requiredTime) * 100, 100);
      
      setActiveCapture(prev => prev ? { ...prev, progress } : null);
      
      if (progress >= 100) {
        completeCapture();
      }
    };

    const interval = setInterval(updateProgress, 50);
    return () => clearInterval(interval);
  }, [activeCapture]);

  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–±–æ—Ä–∞
  const completeCapture = () => {
    if (!activeCapture) return;

    const item = arObjects.find(obj => obj.id === activeCapture.itemId);
    if (!item) return;

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    setInventory(prev => [...prev, item]);
    
    // –ù–∞–≥—Ä–∞–¥–∞ –≤ –≤–∞–ª—é—Ç–µ
    const reward = Math.floor(item.value / 10);
    setCurrency({
      ...currency,
      tokens: currency.tokens + reward,
      shards: currency.shards + Math.floor(reward / 5)
    });
    
    // –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç —Å –∫–∞—Ä—Ç—ã
    setArObjects(prev => prev.filter(obj => obj.id !== item.id));
    
    setActiveCapture(null);
    setNotification(`–°–æ–±—Ä–∞–Ω: ${item.name}! +${reward} —Ç–æ–∫–µ–Ω–æ–≤`);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
    setTimeout(() => {
      if (isCameraActive) {
        generateARObjects();
      }
    }, 5000);
  };

  // –û—Ç–º–µ–Ω–∞ —Å–±–æ—Ä–∞
  const cancelCapture = () => {
    setActiveCapture(null);
    setNotification('–°–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω');
  };

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  const generateItemName = (type: GameItem['type'], rarity: GameItem['rarity']): string => {
    const prefixes = {
      common: ['–û–±—ã—á–Ω—ã–π', '–ü—Ä–æ—Å—Ç–æ–π'],
      uncommon: ['–ù–µ–æ–±—ã—á–Ω—ã–π', '–£–ª—É—á—à–µ–Ω–Ω—ã–π'],
      rare: ['–†–µ–¥–∫–∏–π', '–ö–∏–±–µ—Ä'],
      epic: ['–≠–ø–∏—á–µ—Å–∫–∏–π', '–ö–≤–∞–Ω—Ç–æ–≤—ã–π'],
      legendary: ['–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π', '–ú–∏—Ñ–∏—á–µ—Å–∫–∏–π']
    };
    
    const names = {
      weapon: ['–ö–ª–∏–Ω–æ–∫', '–ü–∏—Å—Ç–æ–ª–µ—Ç', '–í–∏–Ω—Ç–æ–≤–∫–∞'],
      armor: ['–ë—Ä–æ–Ω—è', '–ö–æ—Å—Ç—é–º', '–©–∏—Ç'],
      artifact: ['–ö—Ä–∏—Å—Ç–∞–ª–ª', '–†—É–Ω–∞', '–ú–∞—Ç—Ä–∏—Ü–∞'],
      resource: ['–ú–µ—Ç–∞–ª–ª', '–≠–Ω–µ—Ä–≥–∏—è', '–ü–ª–∞–∑–º–∞'],
      consumable: ['–°—Ç–∏–º–ø–∞–∫', '–ë–∞—Ç–∞—Ä–µ—è', '–ë—É—Å—Ç–µ—Ä']
    };
    
    const prefix = prefixes[rarity][Math.floor(Math.random() * prefixes[rarity].length)];
    const name = names[type][Math.floor(Math.random() * names[type].length)];
    
    return `${prefix} ${name}`;
  };

  const getItemIcon = (type: GameItem['type']): string => {
    const icons = {
      weapon: '‚öîÔ∏è',
      armor: 'üõ°Ô∏è',
      artifact: 'üîÆ',
      resource: 'üíé',
      consumable: 'üíä'
    };
    return icons[type];
  };

  const calculateItemValue = (rarity: GameItem['rarity']): number => {
    const values = {
      common: 100,
      uncommon: 300,
      rare: 800,
      epic: 2000,
      legendary: 6000
    };
    return values[rarity] + Math.floor(Math.random() * values[rarity] * 0.3);
  };

  return (
    <div className="h-full w-full relative bg-bg-primary overflow-hidden">
      {/* –í–∏–¥–µ–æ —ç–ª–µ–º–µ–Ω—Ç - –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
      <video
        ref={videoRef}
        playsInline
        muted
        autoPlay
        style={{
          width: '100vw',
          height: '100vh',
          objectFit: 'cover',
          position: 'absolute',
          top: 0,
          left: 0,
          zIndex: isCameraActive ? 5 : -1
        }}
        className={isCameraActive ? 'block' : 'hidden'}
      />
      
      {/* –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å - –ü–û–í–ï–†–• –≤–∏–¥–µ–æ */}
      <div className="glass-panel m-4 p-4" style={{ position: 'absolute', top: 0, left: 0, right: 0, zIndex: 20 }}>
        <div className="flex justify-between items-center mb-4">
          <div className="flex items-center space-x-3">
            <CameraIcon size={24} className="text-neon-purple" />
            <h2 className="font-heading text-xl text-neon-purple">
              AR –°–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤
            </h2>
          </div>
          
          <div className="flex items-center space-x-4">
            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–≤–∏–∂–µ–Ω–∏—è */}
            <div className="text-center">
              <div className={`w-3 h-3 rounded-full mx-auto mb-1 ${
                isMoving ? 'bg-neon-pink animate-pulse' : 'bg-neon-green'
              }`}></div>
              <p className="text-xs text-text-muted">
                {isMoving ? '–î–≤–∏–∂–µ–Ω–∏–µ' : '–ü–æ–∫–æ–π'}
              </p>
            </div>
            
            {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ */}
            <div className="text-center">
              <BackpackIcon size={20} className="text-neon-blue mx-auto mb-1" />
              <p className="text-xs text-neon-blue font-mono">{inventory.length}</p>
            </div>
          </div>
        </div>

        {/* –ú–æ–±–∏–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è - –ë–û–õ–¨–®–ò–ï –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ */}
        <div className="grid grid-cols-1 gap-3 sm:grid-cols-2 lg:grid-cols-3">
          <button
            className={`btn-neon mobile-touch ${isCameraActive ? 'pink' : 'green'} text-lg py-4 px-6`}
            onClick={isCameraActive ? stopCamera : startCamera}
            disabled={loading}
          >
            <div className="flex items-center justify-center space-x-3">
              <CameraIcon size={24} />
              <span className="font-semibold">
                {loading ? '–ó–∞–ø—É—Å–∫...' : isCameraActive ? '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å AR' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å AR'}
              </span>
            </div>
          </button>
          
          {activeCapture && (
            <button
              className="btn-neon mobile-touch pink text-lg py-4 px-6"
              onClick={cancelCapture}
            >
              <div className="flex items-center justify-center space-x-3">
                <span>‚ùå</span>
                <span className="font-semibold">–û—Ç–º–µ–Ω–∏—Ç—å —Å–±–æ—Ä</span>
              </div>
            </button>
          )}
          
          {isCameraActive && (
            <button
              className="btn-neon mobile-touch purple text-lg py-4 px-6"
              onClick={generateARObjects}
            >
              <div className="flex items-center justify-center space-x-3">
                <span>üîÑ</span>
                <span className="font-semibold">–û–±–Ω–æ–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç—ã</span>
              </div>
            </button>
          )}
        </div>
      </div>

      {/* AR –æ–±–ª–∞—Å—Ç—å - –ò–°–ü–†–ê–í–õ–ï–ù–û */}
      <div className="absolute inset-0" style={{ zIndex: isCameraActive ? 15 : 5 }}>
        {(isCameraActive || loading) ? (
          <div className="ar-camera-container absolute inset-0 w-full h-full overflow-hidden">
            {loading && (
              <div className="absolute inset-0 flex items-center justify-center bg-black bg-opacity-70 z-50">
                <div className="text-center">
                  <div className="spinner mx-auto mb-4"></div>
                  <p className="text-neon-blue">–ó–∞–ø—É—Å–∫ –∫–∞–º–µ—Ä—ã...</p>
                  <p className="text-xs text-text-secondary mt-2">–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ</p>
                </div>
              </div>
            )}
            
            {error && (
              <div className="absolute inset-0 flex items-center justify-center bg-black bg-opacity-80 z-50">
                <div className="text-center p-4">
                  <div className="text-neon-pink text-4xl mb-2">‚ö†Ô∏è</div>
                  <h3 className="text-neon-pink font-heading mb-2">–û—à–∏–±–∫–∞ –∫–∞–º–µ—Ä—ã</h3>
                  <p className="text-text-primary mb-4">{error}</p>
                  <button 
                    className="btn-neon pink px-4 py-2"
                    onClick={() => {
                      setError(null);
                      startCamera();
                    }}
                  >
                    –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
                  </button>
                </div>
              </div>
            )}
            
            {/* AR Overlay - –ø–æ–≤–µ—Ä—Ö –≤–∏–¥–µ–æ */}
            <div className="ar-overlay absolute inset-0" style={{ zIndex: 25 }}>
              {/* –ü—Ä–∏—Ü–µ–ª */}
              <div className="ar-crosshair">
                <CrosshairIcon size={40} className="text-neon-blue" />
              </div>
              
              {/* AR –æ–±—ä–µ–∫—Ç—ã */}
              {arObjects.map((item) => (
                <div
                  key={item.id}
                  className={`ar-object absolute cursor-pointer ${
                    activeCapture?.itemId === item.id ? 'pointer-events-none' : 'pointer-events-auto'
                  }`}
                  style={{
                    left: `${item.properties?.screenX}%`,
                    top: `${item.properties?.screenY}%`,
                    transform: 'translate(-50%, -50%)'
                  }}
                  onClick={() => startCapture(item)}
                >
                  {/* –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç */}
                  <div className={`
                    w-20 h-20 sm:w-24 sm:h-24 rounded-full border-4 flex items-center justify-center text-3xl sm:text-4xl
                    transition-all duration-300 hover:scale-110 active:scale-95 cursor-pointer touch-manipulation
                    ${
                      item.rarity === 'legendary' ? 'border-neon-orange bg-neon-orange bg-opacity-20 glow-pulse' :
                      item.rarity === 'epic' ? 'border-neon-purple bg-neon-purple bg-opacity-20' :
                      item.rarity === 'rare' ? 'border-neon-blue bg-neon-blue bg-opacity-20' :
                      item.rarity === 'uncommon' ? 'border-neon-green bg-neon-green bg-opacity-20' :
                      'border-gray-400 bg-gray-400 bg-opacity-20'
                    }
                  `}>
                    {item.icon}
                  </div>
                  
                  {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–º–µ—Ç–µ */}
                  <div className="absolute top-full left-1/2 transform -translate-x-1/2 mt-2 glass-panel p-2 min-w-max">
                    <p className={`text-xs font-semibold ${
                      item.rarity === 'legendary' ? 'text-neon-orange' :
                      item.rarity === 'epic' ? 'text-neon-purple' :
                      item.rarity === 'rare' ? 'text-neon-blue' :
                      item.rarity === 'uncommon' ? 'text-neon-green' :
                      'text-gray-400'
                    }`}>
                      {item.name}
                    </p>
                    <p className="text-xs text-text-muted">
                      –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: {Math.round(item.properties?.distance || 0)}–º
                    </p>
                    <p className="text-xs text-neon-yellow">
                      –°–±–æ—Ä: {item.captureTime}—Å
                    </p>
                  </div>
                  
                  {/* –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±–æ—Ä–∞ */}
                  {activeCapture?.itemId === item.id && (
                    <div className="ar-capture-progress">
                      <div 
                        className="ar-capture-fill"
                        style={{ width: `${activeCapture.progress}%` }}
                      />
                    </div>
                  )}
                </div>
              ))}
              
              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–µ */}
              {activeCapture && (
                <div className="absolute top-4 left-1/2 transform -translate-x-1/2 glass-panel p-4">
                  <div className="text-center">
                    <p className="text-neon-yellow mb-2">
                      –°–±–æ—Ä –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...
                    </p>
                    <div className="progress-bar w-48 mb-2">
                      <div 
                        className="progress-fill"
                        style={{ width: `${activeCapture.progress}%` }}
                      />
                    </div>
                    <p className="text-xs text-text-muted">
                      {Math.round(activeCapture.progress)}% | –ù–µ –¥–≤–∏–≥–∞–π—Ç–µ—Å—å!
                    </p>
                  </div>
                </div>
              )}
              
              {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –¥–≤–∏–∂–µ–Ω–∏–∏ */}
              {isMoving && (
                <div className="absolute bottom-20 left-1/2 transform -translate-x-1/2 glass-panel p-3 border-2 border-neon-pink">
                  <p className="text-neon-pink text-center font-semibold">
                    ‚ö†Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å –¥–ª—è —Å–±–æ—Ä–∞!
                  </p>
                </div>
              )}
              
              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö */}
              <div className="absolute top-4 right-4 glass-panel p-3">
                <p className="text-xs text-text-secondary mb-1">–û–±—ä–µ–∫—Ç—ã –≤ —Ä–∞–¥–∏—É—Å–µ:</p>
                <p className="text-lg font-mono text-neon-green">{arObjects.length}</p>
              </div>
            </div>
          </div>
        ) : (
          /* –ü–ª–∞—Å—Ç-—Å–∫—Ä–∏–Ω –¥–æ –∑–∞–ø—É—Å–∫–∞ –∫–∞–º–µ—Ä—ã */
          <div className="w-full h-full bg-bg-secondary cyber-grid flex items-center justify-center">
            <div className="text-center">
              <CameraIcon size={80} className="text-neon-purple opacity-50 mb-4 mx-auto" />
              <h3 className="font-heading text-xl text-neon-purple mb-2">
                AR –†–µ–∂–∏–º –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
              </h3>
              <p className="text-text-secondary mb-4">
                –ù–∞–∂–º–∏—Ç–µ "–ó–∞–ø—É—Å—Ç–∏—Ç—å AR" –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
              </p>
              
              {!location && (
                <div className="cyber-card p-4 border-neon-yellow">
                  <p className="text-neon-yellow text-sm">
                    ‚ö†Ô∏è –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ.<br/>
                    AR —Å–±–æ—Ä –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.
                  </p>
                </div>
              )}
            </div>
          </div>
        )}
      </div>

      {/* –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å */}
      {inventory.length > 0 && (
        <div className="glass-panel m-4 p-4">
          <h3 className="font-heading text-lg mb-3 text-neon-purple flex items-center space-x-2">
            <BackpackIcon size={20} />
            <span>–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å ({inventory.length})</span>
          </h3>
          
          <div className="grid grid-cols-2 md:grid-cols-4 gap-3 max-h-32 overflow-y-auto">
            {inventory.slice(-8).map((item) => (
              <div
                key={item.id}
                className={`cyber-card p-2 text-center rarity-${item.rarity}`}
              >
                <div className="text-xl mb-1">{item.icon}</div>
                <p className={`text-xs font-semibold mb-1 ${
                  item.rarity === 'legendary' ? 'text-neon-orange' :
                  item.rarity === 'epic' ? 'text-neon-purple' :
                  item.rarity === 'rare' ? 'text-neon-blue' :
                  item.rarity === 'uncommon' ? 'text-neon-green' :
                  'text-gray-400'
                }`}>
                  {item.name}
                </p>
                <p className="text-xs text-neon-yellow">
                  {item.value.toLocaleString()}
                </p>
              </div>
            ))}
          </div>
          
          {inventory.length > 8 && (
            <p className="text-xs text-text-muted text-center mt-2">
              –ü–æ–∫–∞–∑–∞–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 8 –ø—Ä–µ–¥–º–µ—Ç–æ–≤
            </p>
          )}
        </div>
      )}
    </div>
  );
};

export default ARCollectionPage;